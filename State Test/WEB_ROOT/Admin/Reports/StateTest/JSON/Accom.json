[~[tlist_sql;
	SELECT
		NVL(ak.TEST_DISTRICT_NAME,(SELECT value FROM PREFS WHERE name='districtname' AND ROWNUM = 1)) AS district,
		NVL(ak.TEST_SCHOOL_NAME, sch.name) AS school,
		NVL(ak.TEST_SCHOOL_NUMBER, s.schoolid) AS schoolid,
		CASE
			WHEN scf.pscore_legal_last_name IS NOT NULL
			THEN scf.pscore_legal_last_name || ', ' || scf.pscore_legal_first_name || ' ' || scf.pscore_legal_middle_name
			ELSE s.lastfirst
		END AS lastfirst,
		s.dcid,
		s.grade_level,
		s.home_room,
		CASE x.lep
			WHEN 'L1' THEN 'Y'
			WHEN 'LP' THEN 'Y'
			ELSE 'N'
		END AS ELL,
		CASE 
			WHEN (x.disability_code > 0 AND x.disability_code < 15) THEN 'Y'
			ELSE 'N'
		END AS SP,
		CASE 
            WHEN s.grade_level < 10 THEN
                CASE WHEN ak.ELA_TTS = 1 THEN 'Y' ELSE 'N' END 
            ELSE 'N/A' 
        END AS "ELATTS",
        CASE 
            WHEN s.grade_level < 10 THEN
                CASE WHEN ak.MA_TTS = 1 THEN 'Y' ELSE 'N' END 
            ELSE 'N/A'
        END AS "MATTS",
        CASE 
            WHEN s.grade_level < 10 THEN
                CASE WHEN ak.ELA_ASL = 1 THEN 'Y' ELSE 'N' END 
            ELSE 'N/A'
        END AS "ELAASL",
		CASE 
            WHEN s.grade_level < 10 THEN
                CASE WHEN ak.MA_ASL = 1 THEN 'Y' ELSE 'N' END
            ELSE 'N/A'
        END AS "MAASL",
        CASE 
            WHEN s.grade_level < 10 THEN
                CASE WHEN ak.ELA_POD = 1 THEN 'Y' ELSE 'N' END 
            ELSE 'N/A'
        END AS "ELAPOD",
        CASE 
            WHEN s.grade_level < 10 THEN
                CASE WHEN ak.MA_POD = 1 THEN 'Y' ELSE 'N' END 
            ELSE 'N/A'
        END AS "MAPOD",
		CASE 
            WHEN s.grade_level < 10 THEN
                CASE WHEN ak.ELA_BRAILLE = 1 THEN 'Y' ELSE 'N' END 
            ELSE 'N/A'
        END AS "ELABRAILLE",
		CASE 
            WHEN s.grade_level < 10 THEN
                CASE WHEN ak.MA_BRAILLE = 1 THEN 'Y' ELSE 'N' END 
            ELSE 'N/A'
        END AS "MABRAILLE",
        CASE 
            WHEN s.grade_level < 10 THEN
                CASE WHEN ak.ELA_NON_EMBED = 1 THEN 'Y' ELSE 'N' END 
            ELSE 'N/A'
        END AS "ELAONE",
        CASE 
            WHEN s.grade_level < 10 THEN
                CASE WHEN ak.MA_NON_EMBED = 1 THEN 'Y' ELSE 'N' END 
            ELSE 'N/A'
        END AS "MAONE",
		CASE 
            WHEN s.grade_level < 10 THEN ak.ELA_NOTE
            ELSE 'N/A'
        END AS ELA_NOTE,
		CASE 
            WHEN s.grade_level < 10 THEN ak.MA_NOTE
            ELSE'N/A'
        END AS MA_NOTE,
		CASE 
            WHEN s.grade_level < 10 THEN NVL(ak.ELA_REG_OVERRIDE, 'Y') 
            ELSE 'N/A'
        END AS ELAOVERRIDE,
		CASE 
            WHEN s.grade_level < 10 THEN NVL(ak.MA_REG_OVERRIDE, 'Y') 
            ELSE 'N/A'
        END AS MAOVERRIDE,
		CASE 
            WHEN s.grade_level < 10 THEN ak.ELA_NOT_TESTED 
            ELSE 'N/A' 
        END AS elanotest,
		CASE 
            WHEN s.grade_level < 10 THEN ak.MA_NOT_TESTED 
            ELSE 'N/A'
        END AS manotest,
        CASE 
            WHEN s.grade_level IN (5,8,10) THEN
                CASE WHEN ak.SC_TTS = 1 THEN 'Y' ELSE 'N' END 
            ELSE 'N/A'
        END AS "SCTTS",
        CASE 
            WHEN s.grade_level IN (5,8,10) THEN
                CASE WHEN ak.SC_POD = 1 THEN 'Y' ELSE 'N' END 
            ELSE 'N/A'
        END AS "SCPOD",
        CASE 
            WHEN s.grade_level IN (5,8,10) THEN
                CASE WHEN ak.SC_NON_EMBED = 1 THEN 'Y' ELSE 'N' END 
            ELSE 'N/A'
        END AS "SCONE",
		CASE 
            WHEN s.grade_level IN (5,8,10) THEN ak.SC_NOTE
            ELSE 'N/A'
        END AS SC_NOTE
	FROM Students s
	JOIN Schools sch
		ON s.schoolid = sch.school_number
	LEFT OUTER JOIN S_AK_STU_X x
		ON s.dcid = x.studentsdcid
	LEFT OUTER JOIN U_AKPSUG_AKTEST ak
		ON s.dcid = ak.studentsdcid
	LEFT OUTER JOIN studentcorefields scf 
		ON scf.studentsdcid=s.dcid

	WHERE s.schoolid = ~(curschoolid)
	  AND sch.state_excludefromreporting != 1
	  AND s.enroll_status = 0
	  AND s.grade_level IN (3,4,5,6,7,8,9,10)
]

	{
		"district": "~(district;json)",
		"school": "~(school;json)",
		"schoolid": "~(schoolid;json)",
		"lastfirst": "~(lastfirst;json)",
		"dcid": "~(dcid;json)",
		"grade_level": "~(grade_level;json)",
		"homeroom": "~(homeroom;json)",
		"ell": "~(ell;json)",
		"sp": "~(sp;json)",
		"elatts": "~(elatts;json)",
		"matts": "~(matts;json)",
		"elaasl": "~(elaacl;json)",
		"maasl": "~(maasl;json)",
		"elapod": "~(elapod;json)",
		"mapod": "~(mapod;json)",
		"elabraille": "~(elabraille;json)",
		"mabraille": "~(mabraille;json)",
		"elaone": "~(elaone;json)",
		"maone": "~(maone;json)",
		"elanote": "~(elanote;json)",
		"manote": "~(manote;json)",
		"elaoverride": "~(elaoverride;json)",
		"maoverride": "~(maoverride;json)",
		"elanotest": "~(elanotest;json)",
		"manotest": "~(manotest;json)",
		"sctts": "~(sctts;json)",
		"scpod": "~(scpod;json)",
		"scone": "~(scone;json)",
		"scnote": "~(scnote;json)"
	},
[/tlist_sql]{}]