District Code,School Code,AKSID,District Student ID,Student Last Name,Student First Name,Student Middle Name,Suffix,Gender,Date of Birth,Grade,Race/Ethnicity,Disability Status,504 Plan,English Learner Status,Economically Disadvantaged Status,Migrant Status,Parent/Guardian on Active Duty Military Status,Science - Text-To-Speech,Science - Student provided non-embedded accommodation(s) as noted in IEP or 504 plan.,Science - Print on Demand
~[tlist_sql;SELECT 
                (SELECT DBMS_LOB.SUBSTR(value, 4000) FROM PREFS WHERE name='districtnumber' AND ROWNUM = 1) AS "District",
                CASE 
                    WHEN sch.alternate_school_number > 0 THEN sch.alternate_school_number
                    ELSE sch.school_number 
                END AS "SchoolCode",
                st.state_studentnumber AS "AKSID",
                st.student_number AS "DistrictID",
                CASE
                    WHEN scf.pscore_legal_last_name IS NOT NULL
                        THEN scf.pscore_legal_last_name
                    ELSE st.last_name
                END AS "Last Name",
                CASE
                    WHEN scf.pscore_legal_first_name IS NOT NULL
                        THEN scf.pscore_legal_first_name
                    ELSE st.first_name
                END AS "First Name",
                CASE
                    WHEN scf.pscore_legal_middle_name IS NOT NULL
                        THEN scf.pscore_legal_middle_name
                    ELSE st.middle_name
                END AS "Middle Name",
                ak.suffix AS "Suffix",
                CASE
                    WHEN scf.pscore_legal_gender IS NOT NULL
                        THEN scf.pscore_legal_gender
                    ELSE st.gender
                END AS "Gender",
                TO_CHAR(st.DOB,'MM/DD/YYYY') AS "Date of Birth",
                st.Grade_Level AS "Grade",
                st.Ethnicity AS "Race",
                NVL2(ak.Disability_Code, TO_NUMBER(ak.Disability_Code), 0) AS "Disability",
                CASE 
                    WHEN ak.Section504 = 'Y' THEN 'Y'
                    WHEN ak.Section504 = '1' THEN 'Y'
                    ELSE 'N'
                END AS "504",
                CASE 
                    WHEN ak.LEP IS NOT NULL THEN ak.LEP
                    ELSE 'X' 
                END AS "ELL" ,
                CASE 
                    WHEN ak.Econ = 'Y' THEN 'Y'  
                    ELSE 'N' 
                END AS "Econ",
                CASE 
                    WHEN ak.Migrant IS NULL THEN 'N' 
                    ELSE ak.Migrant
                    END AS "Migrant",
                CASE 
                    WHEN ak.Activeduty_pg = 'Y' THEN 'Y'
                    ELSE 'N'
                END AS "Military",
                CASE 
                    WHEN st.grade_level IN (5,8,10) THEN
                        CASE 
                            WHEN test.SC_TTS = 1 THEN 'Y'
                            ELSE 'N' END
                    ELSE 'N'
                END AS "SCTTS",
				CASE 
                    WHEN st.grade_level IN (5,8,10) THEN
                        CASE 
                            WHEN test.SC_NON_EMBED = 1 THEN 'Y'
                            ELSE 'N' END
                    ELSE 'N'
                END AS "SCONE",
                CASE 
                    WHEN st.grade_level IN (5,8,10) THEN
                        CASE 
                            WHEN test.SC_POD = 1 THEN 'Y'
                            ELSE 'N' END
                    ELSE 'N'
                END AS "SCPOD"
  
            FROM Students st
                JOIN S_AK_STU_X ak
                    ON st.dcid = ak.StudentsDCID
                LEFT OUTER JOIN Schools sch
                    ON st.schoolid = sch.school_number
                LEFT OUTER JOIN U_AKPSUG_AKTEST test
                    ON st.dcid = test.studentsdcid
                LEFT OUTER JOIN StudentCoreFields scf
                    ON st.dcid = scf.studentsdcid
            WHERE sch.state_excludefromreporting != 1
                AND st.enroll_status = 0
                AND st.grade_level IN (5,8,10)
                AND (ak.AlternateAssessment !='Y' OR ak.AlternateAssessment IS NULL)
                AND st.State_ExcludeFromReporting != 1
            ORDER BY sch.school_number, st.grade_level, st.last_name]~(district),~(school),~(aksid),~(student_id),~(last),~(first),~(middle),~(suffix),~(gender),~(dob),~(grade),~(race),~(disability),~(504),~(ell),~(econ),~(migrant),~(military),~(sci_tts),~(sci_other),~(sci_pod)
[/tlist_sql]